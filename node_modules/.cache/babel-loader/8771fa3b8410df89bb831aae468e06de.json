{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pfree\\\\Documents\\\\myprojects\\\\pinterest-clone\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport Mainboard from './components/Mainboard';\nimport unsplash from \"./api/unsplash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [pins, setNewPins] = useState([]);\n  const getImages = term => {\n    return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n      params: {\n        query: term\n      }\n    });\n  };\n  const onSearchSubmit = term => {\n    console.log(\"on search submit\", term);\n    getImages(term).then(res => {\n      let results = res.data.results;\n      let newPins = [...results, ...pins];\n      newPins.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n      setNewPins(newPins);\n    });\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\"Tokyo\", \"Berlin\", \"cats\"];\n    pins.forEach(pinTerm => {\n      promises.push(getImages(pinTerm).then(res => {\n        let results = res.data.results;\n        console.log(results);\n        pinData = pinData.concat(results);\n        pinData.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n      }));\n    });\n    Promise.all(promises).then(() => {\n      setNewPins(pinData);\n    });\n  };\n  useEffect(() => {\n    getNewPins();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSubmit: onSearchSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Mainboard, {\n      pins: pins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"P7r1voI66Rgc8jhArLp5JlF9Hs4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Mainboard","unsplash","App","pins","setNewPins","getImages","term","get","params","query","onSearchSubmit","console","log","then","res","results","data","newPins","sort","a","b","Math","random","getNewPins","promises","pinData","forEach","pinTerm","push","concat","Promise","all"],"sources":["C:/Users/pfree/Documents/myprojects/pinterest-clone/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport Mainboard from './components/Mainboard';\nimport unsplash from \"./api/unsplash\"\n\n\nconst App = () => {\n  const [pins, setNewPins] = useState([])\n\n  const getImages = (term) =>{\n    return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n        query: term\n      },\n    });\n        \n  }\n\n  const onSearchSubmit = (term) => {\n    console.log(\"on search submit\", term);\n    getImages(term).then((res) => {\n      let results = res.data.results;\n\n      let newPins = [\n        ...results,\n        ...pins\n      ]\n\n      newPins.sort(function(a, b){\n        return 0.5 - Math.random()\n      })\n      setNewPins(newPins)\n    })\n  }\n\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n\n    let pins = [\"Tokyo\", \"Berlin\", \"cats\"]\n    pins.forEach((pinTerm) => {\n      promises.push(\n        getImages(pinTerm).then((res) => {\n          let results = res.data.results;\n          console.log(results);\n          pinData = pinData.concat(results)\n          pinData.sort(function (a, b) {\n            return 0.5 - Math.random();\n          });\n        })\n      );\n    });\n    Promise.all(promises).then(() => {\n      setNewPins(pinData);\n    });\n  };\n\n  useEffect(() => {\n    getNewPins();\n  }, []);\n\n\n\n  return (\n    <div className='app'>\n     <Header onSubmit={onSearchSubmit} />  \n     <Mainboard pins={pins} />  \n         \n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,gBAAgB;AAAA;AAGrC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAMO,SAAS,GAAIC,IAAI,IAAI;IACzB,OAAOL,QAAQ,CAACM,GAAG,CAAC,wCAAwC,EAAE;MAC1DC,MAAM,EAAE;QACRC,KAAK,EAAEH;MACT;IACF,CAAC,CAAC;EAEJ,CAAC;EAED,MAAMI,cAAc,GAAIJ,IAAI,IAAK;IAC/BK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,IAAI,CAAC;IACrCD,SAAS,CAACC,IAAI,CAAC,CAACO,IAAI,CAAEC,GAAG,IAAK;MAC5B,IAAIC,OAAO,GAAGD,GAAG,CAACE,IAAI,CAACD,OAAO;MAE9B,IAAIE,OAAO,GAAG,CACZ,GAAGF,OAAO,EACV,GAAGZ,IAAI,CACR;MAEDc,OAAO,CAACC,IAAI,CAAC,UAASC,CAAC,EAAEC,CAAC,EAAC;QACzB,OAAO,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE;MAC5B,CAAC,CAAC;MACFlB,UAAU,CAACa,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,UAAU,GAAG,MAAM;IACvB,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,OAAO,GAAG,EAAE;IAEhB,IAAItB,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;IACtCA,IAAI,CAACuB,OAAO,CAAEC,OAAO,IAAK;MACxBH,QAAQ,CAACI,IAAI,CACXvB,SAAS,CAACsB,OAAO,CAAC,CAACd,IAAI,CAAEC,GAAG,IAAK;QAC/B,IAAIC,OAAO,GAAGD,GAAG,CAACE,IAAI,CAACD,OAAO;QAC9BJ,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;QACpBU,OAAO,GAAGA,OAAO,CAACI,MAAM,CAACd,OAAO,CAAC;QACjCU,OAAO,CAACP,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;UAC3B,OAAO,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE;QAC5B,CAAC,CAAC;MACJ,CAAC,CAAC,CACH;IACH,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC,CAACX,IAAI,CAAC,MAAM;MAC/BT,UAAU,CAACqB,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd0B,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAIN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBACnB,QAAC,MAAM;MAAC,QAAQ,EAAEb;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC,QAAC,SAAS;MAAC,IAAI,EAAEP;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEpB;AAEV,CAAC;AAAA,GAhEKD,GAAG;AAAA,KAAHA,GAAG;AAkET,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}